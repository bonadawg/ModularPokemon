<?xml version="1.0"?>

<!--
    Copyright (c) 2017 by Delphix. All rights reserved.
-->

<!DOCTYPE module PUBLIC
          "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
          "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!--
    Checkstyle configuration that checks the Google coding conventions from Google Java Style
    that can be found at https://google.github.io/styleguide/javaguide.html.

    Checkstyle is very configurable. Be sure to read the documentation at
    http://checkstyle.sf.net (or in your downloaded distribution).

    To completely disable a check, just comment it out or delete it from the file.

    Authors: Max Vetrenko, Ruslan Diachenko, Roman Ivanov.
 -->

<module name = "Checker">
    <property name="basedir" value="${samedir}/../.."/>
    <property name="charset" value="UTF-8"/>
    <property name="fileExtensions" value="java, properties, xml"/>
    <property name="severity" value="error"/>

    <module name="FileTabCharacter">
        <property name="eachLine" value="true"/>
    </module>

    <module name="RegexpHeader">
        <property name="header" value="^/\*$\n^ \* Copyright \(c\) (\d{4}, )?\d{4} by Delphix\. All rights reserved\.$\n^ \*/$"/>
        <property name="fileExtensions" value="java"/>
        <message key="header.mismatch" value="Invalid or missing Delphix copyright header."/>
        <message key="header.missing" value="Invalid or missing Delphix copyright header."/>
    </module>

    <module name="NewlineAtEndOfFile">
        <property name="lineSeparator" value="lf"/>
    </module>

    <module name="SuppressionFilter">
        <property name="file" value="${samedir}/filter-noncompliant.xml"/>
    </module>

    <module name="SuppressionFilter">
        <property name="file" value="${samedir}/filter-exceptions.xml"/>
    </module>

    <module name="TreeWalker">

        <!--
            Annotations: http://checkstyle.sourceforge.net/config_annotation.html
        -->
        <module name="AnnotationLocation">
            <property name="id" value="AnnotationLocationMostCases"/>
            <property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF"/>
        </module>
        <module name="AnnotationLocation">
            <property name="id" value="AnnotationLocationVariables"/>
            <property name="tokens" value="VARIABLE_DEF"/>
            <property name="allowSamelineMultipleAnnotations" value="true"/>
        </module>
        <module name="AnnotationUseStyle"/>

        <!--
            Block Checks: http://checkstyle.sourceforge.net/config_blocks.html
        -->
        <module name="EmptyBlock">
            <property name="option" value="TEXT"/>
            <property name="tokens" value="LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH"/>
        </module>
        <module name="EmptyCatchBlock">
            <property name="exceptionVariableName" value="expected"/>
        </module>
        <module name="LeftCurly">
            <property name="maxLineLength" value="120"/>
        </module>
        <module name="NeedBraces"/>
        <module name="RightCurly">
            <property name="id" value="RightCurlySame"/>
            <property name="tokens" value="LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_DO"/>
        </module>
        <module name="RightCurly">
            <property name="id" value="RightCurlyAlone"/>
            <property name="option" value="alone"/>
            <property name="tokens" value="CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, STATIC_INIT, INSTANCE_INIT"/>
        </module>

        <!--
            Class Design: http://checkstyle.sourceforge.net/config_design.html
        -->
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="InnerTypeLast"/>
        <module name="InterfaceIsType"/>
        <module name="MutableException"/>
        <module name="OneTopLevelClass"/>
        <module name="ThrowsCount"/>

        <!--
            Coding: http://checkstyle.sourceforge.net/config_coding.html
        -->
        <module name="CovariantEquals"/>
        <module name="DefaultComesLast"/>
        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>
        <module name="ExplicitInitialization"/>
        <module name="FallThrough"/>
        <module name="IllegalTokenText">
            <property name="tokens" value="STRING_LITERAL, CHAR_LITERAL"/>
            <property name="format" value="\\u00(08|09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)"/>
            <property name="message" value="Avoid using corresponding octal or Unicode escape."/>
        </module>
        <module name="MissingSwitchDefault"/>
        <module name="MultipleVariableDeclarations"/>
        <module name="NoFinalizer"/>
        <module name="OneStatementPerLine"/>
        <module name="PackageDeclaration"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>
        <module name="SuperClone"/>
        <module name="UnnecessaryParentheses"/>

        <!--
            Imports: http://checkstyle.sourceforge.net/config_imports.html
        -->
        <module name="AvoidStarImport"/>
        <module name="CustomImportOrder">
            <property name="sortImportsInGroupAlphabetically" value="true"/>
            <property name="separateLineBetweenGroups" value="true"/>
            <property name="customImportOrderRules" value="STATIC###THIRD_PARTY_PACKAGE"/>
        </module>
        <module name="IllegalImport">
            <property name="illegalPkgs" value="org.apache.hadoop.thirdparty.guava.common"/>
            <message key="import.illegal" value="Importing {0} is not allowed. Import Guava from from the com.google.common namespace instead."/>
        </module>
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>

        <!--
            Miscellaneous: http://checkstyle.sourceforge.net/config_misc.html
        -->
        <module name="ArrayTypeStyle"/>
        <module name="AvoidEscapedUnicodeCharacters">
            <property name="allowEscapesForControlCharacters" value="true"/>
            <property name="allowByTailComment" value="true"/>
            <property name="allowNonPrintableEscapes" value="true"/>
        </module>
        <module name="CommentsIndentation"/>
        <module name="OuterTypeFilename"/>
        <module name="UpperEll"/>

        <!--
            Modifiers: http://checkstyle.sourceforge.net/config_modifier.html
        -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>

        <!--
            Regexp: http://checkstyle.sourceforge.net/config_regexp.html
        -->
        <module name="RegexpSinglelineJava">
            <property name="format" value="\s+$"/>
            <property name="message" value="Whitespace is disallowed at the end of a line"/>
        </module>
        <module name="RegexpSinglelineJava">
            <property name="format" value="^.*Logger\s+(?!logger\s)([a-zA-Z0-9_]+\s)\s*=\s+LoggerFactory.getLogger\([a-zA-Z0-9_]+\.class\);$"/>
            <property name="ignoreComments" value="true"/>
            <property name="message" value="Loggers must be named 'logger'."/>
        </module>
        <module name="RegexpSinglelineJava">
            <property name="format" value="^((?!private).)*Logger\s+logger\s+=\s+LoggerFactory.getLogger\([a-zA-Z0-9_]+\.class\);$"/>
            <property name="ignoreComments" value="true"/>
            <property name="message" value="Loggers must be declared 'private'."/>
        </module>
        <module name="RegexpSinglelineJava">
            <property name="format" value="^((?!static).)*Logger\s+logger\s+=\s+LoggerFactory.getLogger\([a-zA-Z0-9_]+\.class\);$"/>
            <property name="ignoreComments" value="true"/>
            <property name="message" value="Loggers must be declared 'static'."/>
        </module>
        <module name="RegexpSinglelineJava">
            <property name="format" value="^((?!final).)*Logger\s+logger\s+=\s+LoggerFactory.getLogger\([a-zA-Z0-9_]+\.class\);$"/>
            <property name="ignoreComments" value="true"/>
            <property name="message" value="Loggers must be declared 'final'."/>
        </module>

        <!--
            Size Violations: http://checkstyle.sourceforge.net/config_sizes.html
        -->
        <module name="LineLength">
            <property name="max" value="240"/>
            <property name="ignorePattern" value="^package.*|^import.*|a href|href|http://|https://|ftp://"/>
        </module>

        <!--
            Whitespace: http://checkstyle.sourceforge.net/config_whitespace.html
        -->
        <module name="EmptyLineSeparator">
            <property name="allowNoEmptyLineBetweenFields" value="true"/>
            <property name="tokens" value="IMPORT, CLASS_DEF, INTERFACE_DEF, ENUM_DEF, STATIC_INIT, INSTANCE_INIT, METHOD_DEF, CTOR_DEF"/>
        </module>
        <module name="GenericWhitespace">
            <message key="ws.followed" value="GenericWhitespace ''{0}'' is followed by whitespace."/>
            <message key="ws.preceded" value="GenericWhitespace ''{0}'' is preceded with whitespace."/>
            <message key="ws.illegalFollow" value="GenericWhitespace ''{0}'' should followed by whitespace."/>
            <message key="ws.notPreceded" value="GenericWhitespace ''{0}'' is not preceded with whitespace."/>
        </module>
        <module name="MethodParamPad"/>
        <module name="NoLineWrap"/>
        <module name="OperatorWrap">
            <property name="option" value="NL"/>
            <property name="tokens" value="BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR, LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR, METHOD_REF "/>
        </module>
        <module name="ParenPad"/>
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapComma"/>
            <property name="tokens" value="COMMA"/>
            <property name="option" value="EOL"/>
        </module>
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapDot"/>
            <property name="tokens" value="DOT"/>
            <property name="option" value="nl"/>
        </module>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAround">
            <property name="allowEmptyConstructors" value="true"/>
            <property name="allowEmptyMethods" value="true"/>
            <property name="allowEmptyTypes" value="true"/>
            <property name="allowEmptyLoops" value="true"/>
        </module>
    </module>

</module>
